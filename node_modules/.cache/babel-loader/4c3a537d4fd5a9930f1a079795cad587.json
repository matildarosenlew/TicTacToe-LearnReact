{"ast":null,"code":"var _jsxFileName = \"/Users/matildarosenlew/Exercice-TicTacToe/react-tic-tac-toe/src/Components/game.js\";\nimport React from 'react';\nimport { Board } from './board';\nimport { PlayerIcon } from './playerIcon';\nimport { ColorBox } from './colorBox';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\nexport function Game(props) {\n  const [emoji, setEmoji] = React.useState('');\n  const [boardColor, setBoardColor] = React.useState('');\n  const [pickedColor, setPickedColor] = React.useState(false);\n  const [pickedIcon, setPickedIcon] = React.useState(false);\n  var emojiList = ['🧠', '🦾', '👵', '🦹‍♂️', '🧚‍♀️'];\n  var colorHex = ['#E27D60', '#E8A87C', 'C38D9E', '#41B3A3', '#000000'];\n\n  renderIcon = emoji => {\n    return /*#__PURE__*/React.createElement(PlayerIcon, {\n      icon: emoji,\n      onClick: () => handleClick(emoji),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderColorPick = hexCode => {\n    return /*#__PURE__*/React.createElement(ColorBox, {\n      hexCode: hexCode,\n      onClick: () => handleClickCol(hexCode),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const handleClick = icon => {\n    setEmoji(icon);\n    setPickedIcon(true);\n  };\n\n  const handleClickCol = hexCode => {\n    setBoardColor(hexCode);\n    setPickedColor(true);\n  };\n\n  if (pickedIcon && pickedColor) {\n    return startGame(emoji, boardColor);\n  }\n\n  let prompt = 'Choose your player icon!';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"game-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"TIC-TAC-TOE\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"board-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, prompt), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, emojiList.map(emoji => renderIcon(emoji))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }, colorHex.map(hexCode => renderColorPick(hexCode))));\n}\n\nfunction startGame(emoji, color) {\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/gameStart\",\n      state: {\n        playerIcon: emoji,\n        boardColor: color\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/matildarosenlew/Exercice-TicTacToe/react-tic-tac-toe/src/Components/game.js"],"names":["React","Board","PlayerIcon","ColorBox","BrowserRouter","Route","Link","Redirect","Game","props","emoji","setEmoji","useState","boardColor","setBoardColor","pickedColor","setPickedColor","pickedIcon","setPickedIcon","emojiList","colorHex","renderIcon","handleClick","renderColorPick","hexCode","handleClickCol","icon","startGame","prompt","map","color","pathname","state","playerIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Board} from './board'; \nimport {PlayerIcon} from './playerIcon';\nimport {ColorBox} from './colorBox';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\n\n\nexport function Game(props) {\n\n  const [emoji, setEmoji] = React.useState('');\n  const [boardColor, setBoardColor] = React.useState('');\n  const [pickedColor, setPickedColor] = React.useState(false);\n  const [pickedIcon, setPickedIcon] = React.useState(false);\n  var emojiList = ['🧠', '🦾', '👵', '🦹‍♂️', '🧚‍♀️'];\n  var colorHex = ['#E27D60', '#E8A87C', 'C38D9E', '#41B3A3', '#000000'];\n\n  renderIcon = (emoji) => {\n    return <PlayerIcon\n      icon={emoji}\n      onClick={() => handleClick(emoji)}\n      />;\n  }\n\n  const renderColorPick = (hexCode) => {\n    return <ColorBox\n      hexCode={hexCode}\n      onClick={() => handleClickCol(hexCode)}\n      />;\n  }\n\n  const handleClick = (icon) => {\n      setEmoji(icon);\n      setPickedIcon(true);\n  }\n\n  const handleClickCol = (hexCode) => {\n    setBoardColor(hexCode);\n    setPickedColor(true);\n}\n\n\n      if (pickedIcon && pickedColor) {\n        return startGame(emoji, boardColor);\n      }\n      let prompt = 'Choose your player icon!';\n\n\n      return (\n        <div className= \"wrapper\">\n          <h1 className=\"game-header\">TIC-TAC-TOE</h1>    \n          <h2 className=\"board-heading\">{prompt}</h2>\n          <div className=\"icon-row\">\n          {emojiList.map((emoji) => renderIcon(emoji))}\n          </div>\n           <div className=\"color-row\">\n          {colorHex.map((hexCode) => renderColorPick(hexCode))}\n          </div> \n        </div>\n      );\n    }\n\n  function startGame(emoji, color){\n    return  <Redirect to={{pathname: \"/gameStart\" , state: {playerIcon: emoji, boardColor: color} }} />\n}"]},"metadata":{},"sourceType":"module"}