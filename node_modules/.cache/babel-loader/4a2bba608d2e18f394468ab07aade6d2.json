{"ast":null,"code":"var _jsxFileName = \"/Users/matildarosenlew/Exercice-TicTacToe/react-tic-tac-toe/src/Components/game.js\";\nimport React from 'react';\nimport { Board } from './board';\nimport { PlayerIcon } from './playerIcon';\nimport { ColorBox } from './colorBox';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emoji: '',\n      emojiList: ['üß†', 'ü¶æ', 'üëµ', 'ü¶π‚Äç‚ôÇÔ∏è', 'üßö‚Äç‚ôÄÔ∏è'],\n      colorHex: ['#E27D60', '#E8A87C', 'C38D9E', '#41B3A3', '#000000'],\n      boardColor: '',\n      pickedColor: false,\n      pickedIcon: false\n    };\n  }\n\n  renderIcon(emoji) {\n    return /*#__PURE__*/React.createElement(PlayerIcon, {\n      icon: emoji,\n      onClick: () => this.handleClick(emoji),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  }\n\n  renderColorPick(hexCode) {\n    return /*#__PURE__*/React.createElement(ColorBox, {\n      hexCode: hexCode,\n      onClick: () => this.handleClickCol(hexCode),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  handleClick(icon) {\n    this.setState({\n      emoji: icon,\n      pickedIcon: true\n    });\n  }\n\n  handleClickCol(hexCode) {\n    this.setState({\n      boardColor: hexCode,\n      pickedColor: true\n    });\n  }\n\n  render() {\n    if (this.state.pickedIcon && this.state.pickedColor) {\n      return startGame(this.state.emoji, this.state.boardColor);\n    }\n\n    let prompt = 'Choose your player icon!';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"game-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"TIC-TAC-TOE\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"board-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, prompt), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, this.state.emojiList.map(emoji => this.renderIcon(emoji))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, this.state.colorHex.map(hexCode => this.renderColorPick(hexCode))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nfunction startGame(emoji, color) {\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/gameStart\",\n      state: {\n        playerIcon: emoji,\n        boardColor: color\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/matildarosenlew/Exercice-TicTacToe/react-tic-tac-toe/src/Components/game.js"],"names":["React","Board","PlayerIcon","ColorBox","BrowserRouter","Route","Link","Redirect","Game","Component","constructor","props","state","emoji","emojiList","colorHex","boardColor","pickedColor","pickedIcon","renderIcon","handleClick","renderColorPick","hexCode","handleClickCol","icon","setState","render","startGame","prompt","map","color","pathname","playerIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Board} from './board'; \nimport {PlayerIcon} from './playerIcon';\nimport {ColorBox} from './colorBox';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\n\n\nexport class Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      emoji: '',\n      emojiList : ['üß†', 'ü¶æ', 'üëµ', 'ü¶π‚Äç‚ôÇÔ∏è', 'üßö‚Äç‚ôÄÔ∏è'],\n      colorHex : ['#E27D60', '#E8A87C', 'C38D9E', '#41B3A3', '#000000'],\n      boardColor: '',\n      pickedColor : false,\n      pickedIcon : false,\n    };\n\n  }\n\n  renderIcon(emoji) {\n    return <PlayerIcon\n      icon={emoji}\n      onClick={() => this.handleClick(emoji)}\n      />;\n  }\n\n  renderColorPick(hexCode) {\n    return <ColorBox\n      hexCode={hexCode}\n      onClick={() => this.handleClickCol(hexCode)}\n      />;\n  }\n\n  handleClick(icon) {\n      this.setState({\n        emoji: icon,\n        pickedIcon: true,\n    });\n  }\n\n  handleClickCol(hexCode) {\n    this.setState({\n      boardColor: hexCode,\n      pickedColor: true,\n  });\n}\n\n\n\n    render() {\n      if (this.state.pickedIcon && this.state.pickedColor) {\n        return startGame(this.state.emoji, this.state.boardColor);\n      }\n      let prompt = 'Choose your player icon!';\n\n\n      return (\n        <div className= \"wrapper\">\n          <h1 className=\"game-header\">TIC-TAC-TOE</h1>    \n          <h2 className=\"board-heading\">{prompt}</h2>\n          <div className=\"icon-row\">\n          {this.state.emojiList.map((emoji) => this.renderIcon(emoji))}\n          </div>\n          <div className=\"color-row\">\n          {this.state.colorHex.map((hexCode) => this.renderColorPick(hexCode))}\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function startGame(emoji, color){\n    return  <Redirect to={{pathname: \"/gameStart\" , state: {playerIcon: emoji, boardColor: color} }} />\n}"]},"metadata":{},"sourceType":"module"}