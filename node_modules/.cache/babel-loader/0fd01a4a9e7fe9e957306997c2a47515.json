{"ast":null,"code":"var _jsxFileName = \"/Users/matildarosenlew/Exercice-TicTacToe/react-tic-tac-toe/src/Components/board.js\";\nimport React from 'react';\nimport { calcWinner } from '../Functions/calcWinner';\nimport { Box } from './box';\nimport { GameOver } from './gameOver';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\nexport class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    var computer = 'ðŸ§Ÿ';\n    this.state = {\n      boxes: Array(9).fill(null),\n      xIsNext: true,\n      xPlayer: this.props.location.state.playerIcon\n    };\n    console.log(this.props.location.state.xPlayer);\n  }\n\n  renderBox(i) {\n    return /*#__PURE__*/React.createElement(Box, {\n      value: this.state.boxes[i],\n      onClick: () => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }\n    });\n  }\n\n  handleClick(i) {\n    const boxes = this.state.boxes.slice();\n\n    if (calcWinner(boxes) || boxes[i]) {\n      return;\n    }\n\n    boxes[i] = this.state.xIsNext ? this.state.xPlayer : 'ðŸ§Ÿ';\n    this.setState({\n      boxes: boxes,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const winner = calcWinner(this.state.boxes);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n      return winnerAnnounced(winner);\n    } else if (checkFullBoard(this.state.boxes)) {\n      return winnerAnnounced('It was a tie!');\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? this.state.xPlayer : 'ðŸ§Ÿ');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"game-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"TIC-TAC-TOE\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"board-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, this.renderBox(0), this.renderBox(1), this.renderBox(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, this.renderBox(3), this.renderBox(4), this.renderBox(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, this.renderBox(6), this.renderBox(7), this.renderBox(8)))));\n  }\n\n}\n\nfunction winnerAnnounced(winner) {\n  //console.log(winner);\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/gameOver\",\n      state: {\n        win: winner\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/matildarosenlew/Exercice-TicTacToe/react-tic-tac-toe/src/Components/board.js"],"names":["React","calcWinner","Box","GameOver","BrowserRouter","Route","Link","Redirect","Board","Component","constructor","props","computer","state","boxes","Array","fill","xIsNext","xPlayer","location","playerIcon","console","log","renderBox","i","handleClick","slice","setState","render","winner","status","winnerAnnounced","checkFullBoard","pathname","win"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {calcWinner} from '../Functions/calcWinner';\nimport {Box} from './box'; \nimport {GameOver} from './gameOver';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\n\nexport class Board extends React.Component {\n    constructor(props) {\n        super(props);\n        var computer = 'ðŸ§Ÿ';\n        this.state = {\n          boxes: Array(9).fill(null),\n          xIsNext: true,\n          xPlayer: this.props.location.state.playerIcon,\n        };\n        console.log(this.props.location.state.xPlayer)\n      }\n\n    renderBox(i) {\n      return <Box \n        value={this.state.boxes[i]}\n        onClick={() => this.handleClick(i)}\n        />;\n    }\n\n    handleClick(i) {\n        const boxes = this.state.boxes.slice();\n        if (calcWinner(boxes) || boxes[i]) { \n          return;\n          }\n        boxes[i] = this.state.xIsNext ? this.state.xPlayer : 'ðŸ§Ÿ';\n        this.setState({\n            boxes: boxes,\n            xIsNext: !this.state.xIsNext,\n        });\n      }\n  \n    render() {\n        const winner = calcWinner(this.state.boxes);\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n          return winnerAnnounced(winner);\n        } else if (checkFullBoard(this.state.boxes)) {\n            return winnerAnnounced('It was a tie!');\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? this.state.xPlayer : 'ðŸ§Ÿ');\n        }\n  \n      return (\n        <div className= \"body clearfix\">  \n        <div className= \"board-wrapper\">\n          <div className=\"board\">\n          <h1 className=\"game-header\">TIC-TAC-TOE</h1>        \n          <h2 className=\"board-heading\">{status}</h2>\n          <div className=\"board-row\">\n            {this.renderBox(0)}\n            {this.renderBox(1)}\n            {this.renderBox(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderBox(3)}\n            {this.renderBox(4)}\n            {this.renderBox(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderBox(6)}\n            {this.renderBox(7)}\n            {this.renderBox(8)}\n          </div>\n          </div>  \n        </div>\n        </div>\n      );\n    }\n  }\n\n  function winnerAnnounced(winner){\n      //console.log(winner);\n    return  <Redirect to={{pathname: \"/gameOver\" , state: {win:winner} }} />\n  }"]},"metadata":{},"sourceType":"module"}