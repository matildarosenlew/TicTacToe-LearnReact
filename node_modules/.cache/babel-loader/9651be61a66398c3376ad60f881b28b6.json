{"ast":null,"code":"var _jsxFileName = \"/Users/matildarosenlew/Exercice-TicTacToe/react-tic-tac-toe/src/Components/game.js\";\nimport React from 'react';\nimport { Board } from './board';\nimport { PlayerIcon } from './playerIcon';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emoji: '',\n      emojiList: ['üß†', 'ü¶æ', 'üëµ', 'ü¶π‚Äç‚ôÇÔ∏è', 'üßö‚Äç‚ôÄÔ∏è'],\n      colorHex: ['#E27D60', '#E8A87C', 'C38D9E', '#41B3A3', '#000000'],\n      pickedIcon: false\n    };\n  }\n\n  renderIcon(emoji) {\n    return /*#__PURE__*/React.createElement(PlayerIcon, {\n      icon: emoji,\n      onClick: () => this.handleClick(emoji),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  renderColorPick(hexCode) {\n    return /*#__PURE__*/React.createElement(ColorBox, {\n      hexCode: hexCode,\n      onClick: () => this.handleClickCol(hexCode),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    });\n  }\n\n  handleClick(icon) {\n    this.state.emoji = icon;\n    this.setState({\n      emoji: icon,\n      pickedIcon: true\n    });\n  }\n\n  render() {\n    if (this.state.pickedIcon) {\n      return startGame(this.state.emoji);\n    }\n\n    let prompt = 'Choose your player icon!';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"game-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"TIC-TAC-TOE\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"board-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, prompt), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, this.state.emojiList.map(emoji => this.renderIcon(emoji))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.state.colorHex.map(hexCode => this.renderIcon(hexCode))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nfunction startGame(emoji) {\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/gameStart\",\n      state: {\n        playerIcon: emoji\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/matildarosenlew/Exercice-TicTacToe/react-tic-tac-toe/src/Components/game.js"],"names":["React","Board","PlayerIcon","BrowserRouter","Route","Link","Redirect","Game","Component","constructor","props","state","emoji","emojiList","colorHex","pickedIcon","renderIcon","handleClick","renderColorPick","hexCode","handleClickCol","icon","setState","render","startGame","prompt","map","pathname","playerIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Board} from './board'; \nimport {PlayerIcon} from './playerIcon';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\n\n\nexport class Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      emoji: '',\n      emojiList : ['üß†', 'ü¶æ', 'üëµ', 'ü¶π‚Äç‚ôÇÔ∏è', 'üßö‚Äç‚ôÄÔ∏è'],\n      colorHex : ['#E27D60', '#E8A87C', 'C38D9E', '#41B3A3', '#000000'],\n      pickedIcon : false,\n    };\n\n  }\n\n  renderIcon(emoji) {\n    return <PlayerIcon\n      icon={emoji}\n      onClick={() => this.handleClick(emoji)}\n      />;\n  }\n\n  renderColorPick(hexCode) {\n    return <ColorBox\n      hexCode={hexCode}\n      onClick={() => this.handleClickCol(hexCode)}\n      />;\n  }\n\n  handleClick(icon) {\n      this.state.emoji= icon;\n      this.setState({\n        emoji: icon,\n        pickedIcon: true,\n    });\n\n  }\n\n\n\n    render() {\n      if (this.state.pickedIcon) {\n        return startGame(this.state.emoji);\n      }\n      let prompt = 'Choose your player icon!';\n\n\n      return (\n        <div className= \"wrapper\">\n          <h1 className=\"game-header\">TIC-TAC-TOE</h1>    \n          <h2 className=\"board-heading\">{prompt}</h2>\n          <div className=\"icon-row\">\n          {this.state.emojiList.map((emoji) => this.renderIcon(emoji))}\n          </div>\n          <div className=\"icon-row\">\n          {this.state.colorHex.map((hexCode) => this.renderIcon(hexCode))}\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function startGame(emoji){\n    return  <Redirect to={{pathname: \"/gameStart\" , state: {playerIcon: emoji} }} />\n}"]},"metadata":{},"sourceType":"module"}